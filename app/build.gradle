apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
	compileSdkVersion compile_sdk_version
	buildToolsVersion build_tools_version
	
	/** Default configuration for any build type. */
	defaultConfig {
		applicationId "com.onkarnene.cavista.challenge"
		minSdkVersion min_sdk_version
		targetSdkVersion target_sdk_version
		versionCode version_code
		versionName version_name
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary true
		javaCompileOptions {
			annotationProcessorOptions {
				arguments = ["room.schemaLocation": "$projectDir/schemas".toString(),
						"room.incremental": "true",
						"room.expandProjection": "true"]
			}
		}
	}
	
	/** List of all build types which is supported by app module. */
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}
	
	/** Support for Java 8. */
	compileOptions {
		targetCompatibility JavaVersion.VERSION_1_8
		sourceCompatibility JavaVersion.VERSION_1_8
	}
	
	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_1_8.toString()
	}
	
	lintOptions {
		abortOnError false
	}
	
	buildFeatures {
		/** Support for ViewBindings. */
		viewBinding = true
	}
	
	packagingOptions {
		exclude 'META-INF/atomicfu.kotlin_module'
	}
}

/** List of all support and third-party dependencies for the app module. */
dependencies {
	implementation fileTree(dir: "libs", include: ["*.jar"])
	
	// Kotlin, support & annotation
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
	implementation "androidx.core:core-ktx:${core_ktx_version}"
	implementation "androidx.appcompat:appcompat:${appcompat_version}"
	implementation "androidx.annotation:annotation:${annotation_version}"
	
	// Design
	implementation "androidx.recyclerview:recyclerview:${recycler_view_version}"
	implementation "androidx.cardview:cardview:${card_view_version}"
	implementation "androidx.constraintlayout:constraintlayout:${constraint_layout_version}"
	implementation "com.google.android.material:material:${material_version}"
	
	// Testing
	testImplementation "junit:junit:${junit_version}"
	androidTestImplementation "androidx.test.ext:junit:${test_runner_version}"
	androidTestImplementation "androidx.test.espresso:espresso-core:${espresso_core_version}"
	androidTestImplementation "androidx.test:runner:${test_version}"
	androidTestImplementation "androidx.test:rules:${test_version}"
	
	// Network
	implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
	implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"
	
	// Gson - Java serialization/deserialization
	implementation "com.google.code.gson:gson:${gson_version}"
	
	// Image loading
	implementation "com.github.bumptech.glide:glide:${glide_version}"
	kapt "com.github.bumptech.glide:compiler:${glide_version}"
	
	// Room
	implementation "androidx.room:room-runtime:${room_version}"
	kapt "androidx.room:room-compiler:${room_version}"
	
	// ViewModel & LiveData
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle_version}"
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}"
	
	// SharedPreferences
	implementation "androidx.preference:preference-ktx:${preference_version}"
	
	// Dagger2
	implementation "com.google.dagger:dagger:${dagger_version}"
	kapt "com.google.dagger:dagger-compiler:${dagger_version}"
}